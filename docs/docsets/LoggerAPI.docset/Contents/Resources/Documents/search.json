{"Protocols/Logger.html#/s:9LoggerAPI0A0P3logyAA0A11MessageTypeO_SS3msgSS12functionNameSi7lineNumSS04fileH0tF":{"name":"log(_:msg:functionName:lineNum:fileName:)","abstract":"<p>Output a logged message.</p>","parent_name":"Logger"},"Protocols/Logger.html#/s:9LoggerAPI0A0P9isLoggingSbAA0A11MessageTypeOF":{"name":"isLogging(_:)","abstract":"<p>A function that will indicate if a message with a specified type (<code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LoggerMessageType.html\">LoggerMessageType</a></code>)","parent_name":"Logger"},"Protocols/Logger.html":{"name":"Logger","abstract":"<p>A logger protocol implemented by Logger implementations. This API is used by Kitura"},"Enums/LoggerMessageType.html#/s:9LoggerAPI0A11MessageTypeO5entryA2CmF":{"name":"entry","abstract":"<p>Log message type for logging entering into a function</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:9LoggerAPI0A11MessageTypeO4exitA2CmF":{"name":"exit","abstract":"<p>Log message type for logging exiting from a function</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:9LoggerAPI0A11MessageTypeO5debugA2CmF":{"name":"debug","abstract":"<p>Log message type for logging a debugging message</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:9LoggerAPI0A11MessageTypeO7verboseA2CmF":{"name":"verbose","abstract":"<p>Log message type for logging messages in verbose mode</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:9LoggerAPI0A11MessageTypeO4infoA2CmF":{"name":"info","abstract":"<p>Log message type for logging an informational message</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:9LoggerAPI0A11MessageTypeO7warningA2CmF":{"name":"warning","abstract":"<p>Log message type for logging a warning message</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:9LoggerAPI0A11MessageTypeO5errorA2CmF":{"name":"error","abstract":"<p>Log message type for logging an error message</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html#/s:9LoggerAPI0A11MessageTypeO11descriptionSSv":{"name":"description","abstract":"<p>Convert a <code>LoggerMessageType</code> into a pritable format</p>","parent_name":"LoggerMessageType"},"Enums/LoggerMessageType.html":{"name":"LoggerMessageType","abstract":"<p>Copyright IBM Corporation 2016, 2017</p>"},"Classes/Log.html#/s:9LoggerAPI3LogC6loggerAA0A0_pSgvZ":{"name":"logger","abstract":"<p>An instance of the logger. It should usually be the one and only reference","parent_name":"Log"},"Classes/Log.html#/s:9LoggerAPI3LogC7verboseySSyXK_SS12functionNameSi7lineNumSS04fileF0tFZ":{"name":"verbose(_:functionName:lineNum:fileName:)","abstract":"<p>Log a log message for use when in verbose logging mode.</p>","parent_name":"Log"},"Classes/Log.html#/s:9LoggerAPI3LogC4infoySSyXK_SS12functionNameSi7lineNumSS04fileF0tFZ":{"name":"info(_:functionName:lineNum:fileName:)","abstract":"<p>Log an informational message.</p>","parent_name":"Log"},"Classes/Log.html#/s:9LoggerAPI3LogC7warningySSyXK_SS12functionNameSi7lineNumSS04fileF0tFZ":{"name":"warning(_:functionName:lineNum:fileName:)","abstract":"<p>Log a warning message.</p>","parent_name":"Log"},"Classes/Log.html#/s:9LoggerAPI3LogC5errorySSyXK_SS12functionNameSi7lineNumSS04fileF0tFZ":{"name":"error(_:functionName:lineNum:fileName:)","abstract":"<p>Log an error message.</p>","parent_name":"Log"},"Classes/Log.html#/s:9LoggerAPI3LogC5debugySSyXK_SS12functionNameSi7lineNumSS04fileF0tFZ":{"name":"debug(_:functionName:lineNum:fileName:)","abstract":"<p>Log a debuging message.</p>","parent_name":"Log"},"Classes/Log.html#/s:9LoggerAPI3LogC5entryySSyXK_SS12functionNameSi7lineNumSS04fileF0tFZ":{"name":"entry(_:functionName:lineNum:fileName:)","abstract":"<p>Log a message when entering a function.</p>","parent_name":"Log"},"Classes/Log.html#/s:9LoggerAPI3LogC4exitySSyXK_SS12functionNameSi7lineNumSS04fileF0tFZ":{"name":"exit(_:functionName:lineNum:fileName:)","abstract":"<p>Log a message when exiting a function.</p>","parent_name":"Log"},"Classes/Log.html#/s:9LoggerAPI3LogC9isLoggingSbAA0A11MessageTypeOFZ":{"name":"isLogging(_:)","abstract":"<p>A function that will indicate if a message with a specified type (<code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LoggerMessageType.html\">LoggerMessageType</a></code>)","parent_name":"Log"},"Classes/Log.html":{"name":"Log","abstract":"<p>A class of static members used by anyone who wants to log mesages.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}